services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stonks_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7
    container_name: redis_service
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--save', '60', '1', '--loglevel', 'warning']
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      retries: 5
      start_period: 5s

  shared-prisma:
    build:
      context: .
      dockerfile: ./shared/prisma/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/stonks_db'
    networks:
      - internal_network

  api-gateway:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: always
    ports:
      - '8080:80'
    depends_on:
      - user-service
      - transaction-service
      - order-service
    networks:
      - internal_network

  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user_service
    depends_on:
      shared-prisma:
        condition: service_completed_successfully
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/stonks_db'
    networks:
      - internal_network

  transaction-service:
    build:
      context: .
      dockerfile: ./transaction-service/Dockerfile
    container_name: transaction_service
    depends_on:
      shared-prisma:
        condition: service_completed_successfully
    ports:
      - '3001:3001'
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/stonks_db'
    networks:
      - internal_network

  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    container_name: order_service
    depends_on:
      shared-prisma:
        condition: service_completed_successfully
      matching-engine-service:
        condition: service_started
    ports:
      - '3002:3002'
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/stonks_db'
    networks:
      - internal_network

  matching-engine-service:
    build:
      context: .
      dockerfile: ./matching-engine-service/Dockerfile
    container_name: matching_engine_service
    depends_on:
      transaction-service:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - '3003:3003'
    environment:
      REDIS_URL: redis://redis:6379
    networks:
      - internal_network

volumes:
  postgres_data:
  redis_data:

networks:
  internal_network:
    driver: bridge
