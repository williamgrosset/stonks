generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  user_name      String  @unique
  password       String
  display_name   String?
  wallet_balance BigInt  @default(0)

  stocks              stocks[]
  shares              shares[]
  stock_transactions  stock_transactions[]
  wallet_transactions wallet_transactions[]
}

model stocks {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  user_id    String
  stock_name String  @unique
  users      users?  @relation(fields: [usersId], references: [id])
  usersId    String? @db.ObjectId
}

model shares {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  stock_id String
  user_id  String
  quantity BigInt  @default(0)
  users    users?  @relation(fields: [usersId], references: [id])
  usersId  String? @db.ObjectId

  @@unique([stock_id, user_id], name: "stock_id_user_id")
}

model stock_transactions {
  id                          String      @id @default(auto()) @map("_id") @db.ObjectId
  parent_stock_transaction_id String?
  wallet_transaction_id       String?     @unique
  stock_id                    String
  user_id                     String
  order_status                OrderStatus
  order_type                  OrderType
  quantity                    BigInt
  price                       BigInt
  time_stamp                  DateTime    @default(now())
  users                       users?      @relation(fields: [usersId], references: [id])
  usersId                     String?     @db.ObjectId
}

model wallet_transactions {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id    String
  is_debit   Boolean
  amount     BigInt
  time_stamp DateTime @default(now())
  users      users?   @relation(fields: [usersId], references: [id])
  usersId    String?  @db.ObjectId
}

enum OrderStatus {
  CANCELLED
  COMPLETED
  IN_PROGRESS
  PARTIALLY_COMPLETE
}

enum OrderType {
  MARKET
  LIMIT
}
