name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-prisma-client:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install pnpm
        run: npm install -g pnpm

      - name: 📦 Install dependencies
        run: pnpm install --recursive

      - name: 🏗️ Build Prisma client
        run: pnpm --filter=prisma-client run generate

      - name: 🛠 Cache Prisma Client
        uses: actions/cache@v3
        with:
          path: prisma-client
          key: ${{ runner.os }}-prisma-client-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-prisma-client-

  build:
    needs: build-prisma-client
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - user-service
          - order-service
          - matching-engine-service
          - transaction-service

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install pnpm
        run: npm install -g pnpm

      - name: 📦 Install dependencies
        run: pnpm install --recursive

      - name: 🔄 Restore Prisma Client Cache
        uses: actions/cache@v3
        with:
          path: prisma-client
          key: ${{ runner.os }}-prisma-client-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-prisma-client-

      - name: 🏗️ Build service
        run: pnpm --filter=${{ matrix.service }} run build

      - name: 🧪 Run tests
        if: matrix.service == 'matching-engine-service'
        run: pnpm --filter=${{ matrix.service }} run test
